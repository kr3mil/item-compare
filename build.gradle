plugins {
    id 'fabric-loom' version '1.10.1'
    id 'maven-publish'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'checkstyle'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

loom {
    splitEnvironmentSourceSets()
    
    mods {
        "item-compare" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    withSourcesJar()
    
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// Spotless configuration for code formatting
spotless {
    java {
        target 'src/**/*.java'
        googleJavaFormat('1.19.1')
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

// Checkstyle configuration for linting
checkstyle {
    toolVersion = '10.12.7'
    configFile = file("${rootDir}/checkstyle.xml")
}

configurations.checkstyle {
    resolutionStrategy.capabilitiesResolution.withCapability("com.google.collections:google-collections") {
        select("com.google.guava:guava:0")
    }
}

checkstyleMain {
    source = sourceSets.main.allJava
}

checkstyleClient {
    source = sourceSets.client.allJava
}